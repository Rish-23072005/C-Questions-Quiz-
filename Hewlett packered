Problem Statement:

In the enchanting realm of Digitaria, two renowned wizards, Albus and Merlin, were known for their extraordinary computational spells. Albus, an expert in number theory, had a peculiar aversion to numbers divisible by 3 or ending with the digit 3. He believed such numbers interfered with the purity of his magical algorithms.

Merlin, on the other hand, was a wizard who loved challenges. Intrigued by Albus’s peculiar dislike, he decided to create a sequence of numbers that Albus would appreciate. This sequence consisted of positive integers that were neither divisible by 3 nor ended with the digit 3. He started crafting this sequence: 1, 2, 4, 5, 7, 8, 10, 11, 14, 16, and so on.

One day, Merlin presented Albus with a challenge. He would provide a position k (1 <= k <= 1000), and Albus had to identify the number at that position in Merlin’s specially crafted sequence.

Can you help Albus write a program to find the k-th number in Merlin’s sequence? Remember, the sequence starts from the 1st position. If Albus is successful, he would prove his mastery over number theory and uphold his reputation in Digitaria! Good luck, Albus!

# python :
def div(a):
    if a%3==0 or (str(a)[len(str(a))-1])=="3":
        return False
    else:
        return True
c=int(input())
d=0
z=1
while True:
    if div(z):
        d+=1
    if div(z) and d==c:
        print(z)
        break
    z+=1

// C code :
#include <stdbool.h>

int kth_number(int k) {
    int count = 0;
    for (int i = 1; ; i++) {
        if (i % 3 != 0 && i % 10 != 3) {
            count++;
            if (count == k) {
                return i;
            }
        }
    }
}
